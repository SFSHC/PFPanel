name: Build and Release Executable

on:
  workflow_dispatch: # 手动触发
  push:
    branches: [ "main" ] # 当 push 到 main 分支时触发
  pull_request:
    branches: [ "main" ] # 当 pull request 目标分支为 main 时触发

jobs:
  build-linux:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Build executable with PyInstaller
        run: |
          pyinstaller pfpanel.spec

      - name: Upload executable artifact (for workflow) # 保留上传 Artifact 步骤，方便 workflow 下载
        uses: actions/upload-artifact@v4
        with:
          name: pfpanel-linux-executable
          path: dist/pfpanel

      - name: Create Release # 创建 GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.5 # Release 标签为 v1.5 (硬编码)
          release_name: Polyfield Server Panel v1.5 # Release 名称 (硬编码)
          body: |
            🎉 感谢使用 Polyfield Server Panel v1.5！🎉

            本次更新带来了最新构建的可执行文件，可能包含以下改进 (具体更新内容请参考代码提交记录)：

            * ✨ 最新可执行文件版本：  现在您可以直接下载预编译的可执行文件，无需配置 Python 环境，一键启动控制面板！
            * 🚀 性能优化：  可能包含性能优化，提升控制面板的运行效率。
            * 🐛 Bug 修复：  可能修复了一些 Bug，提升了稳定性和用户体验。
            * 📝 文档更新：  文档可能进行了更新，提供了更完善的使用说明。

            感谢 SFSHC from AVD战队的持续维护！  如果您在使用过程中遇到任何问题或有任何建议，欢迎在 GitHub Issues 中反馈。

            **下载链接：**  请在 Assets 中下载 `pfpanel-linux-executable.zip` 文件。

            感谢您的支持！😊
          draft: false #  设置为 false，发布正式 Release
          prerelease: false # 设置为 false，不是预发布版本
          overwrite: true # **新增：允许覆盖已存在的 Release**

      - name: Upload Release Asset # 上传可执行文件到 Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }} # 从 Create Release 步骤获取上传 URL
          asset_path: dist/pfpanel.zip #  **重要：需要先将可执行文件压缩成 zip 包**
          asset_name: pfpanel-linux-executable.zip # Release Asset 文件名
          asset_content_type: application/zip # Release Asset MIME 类型 (zip 文件)
          overwrite: true # **新增：允许覆盖已存在的同名 Asset**

      - name: Zip executable for release # 将可执行文件压缩成 zip 包
        run: |
          cd dist
          zip -r pfpanel.zip pfpanel # 将 dist/pfpanel 文件夹压缩成 pfpanel.zip
