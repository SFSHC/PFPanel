name: Build and Release Executable

on:
  workflow_dispatch: # 手动触发 workflow

jobs:
  build:
    runs-on: ubuntu-22.04 # 使用 Ubuntu 22.04 系统
    permissions: write-all # 显式声明 Workflow 写入权限

    steps:
      - name: Checkout code # 检出代码
        uses: actions/checkout@v3

      - name: Set up Python 3.10 # 设置 Python 3.10 环境
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies # 安装 Python 依赖
        run: pip install -r requirements.txt

      - name: Install PyInstaller # 安装 PyInstaller
        run: pip install pyinstaller

      - name: Create executable with PyInstaller # 使用 PyInstaller 创建可执行文件
        run: pyinstaller --onefile --name pfpanel --add-data "templates:templates" pfpanel.py # <-- 修改了 --add-data 参数

      - name: Create GitHub Release # 创建 GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # 使用 GitHub Token
        with:
          tag_name: v1.5.0-${{ github.run_number }} # Release tag，例如 v1.5.0-123 (Run Number)
          release_name: Polyfield Server Panel v1.5.0 (Build ${{ github.run_number }}) # Release 名称
          body: |
            🎉 自动构建的可执行文件，版本 v1.5.0！ 🎉

            此版本为自动构建版本，包含以下更新：
            - 自动打包可执行文件
            - 包含 HTML 模板文件
            - 使用 GitHub Actions 自动发布

            感谢使用 Polyfield Server Panel!  如有任何问题，请提交 Issue。
          draft: false # 是否为草稿 Release，设置为 false 发布正式 Release
          prerelease: false # 是否为预发布版本，设置为 false 发布正式 Release

      - name: Upload executable to Release # 上传可执行文件到 Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # 从 create_release 步骤获取上传 URL
          asset_path: ./dist/pfpanel # 可执行文件路径 (PyInstaller 默认输出目录为 dist)
          asset_name: pfpanel-linux-x64 # Release 资源名称，例如 pfpanel-linux-x64
          asset_content_type: application/octet-stream # 资源 MIME 类型，可执行文件通常使用 application/octet-stream
